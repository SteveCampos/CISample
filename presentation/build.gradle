
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
}
android {
    compileSdk 32

    defaultConfig {
        applicationId "com.stevecampos.cisample"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

task jacocoTestReport(type: JacocoReport,
        dependsOn: ['testDebugUnitTest',
                    'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.required = true
        html.required = true
        xml.destination(file("build/reports/jacocoTestReport.xml"))
    }

    def excludes = ['**/R.class',
                    '**/R$*.class',
                    '**/*$ViewBinder*.*',
                    '**/*$InjectAdapter*.*',
                    '**/*Injector*.*',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*Test*.*',
//                    '**/*Activity*.*',
                    '**/CiMattersApplication*.*',
                    'android/**/*.*',
                    '**/di/']

    def debugTree = fileTree(
            dir: "../domain/build/intermediates/javac/debug/classes/de" +
                    "/logerbyte/jacocotest/javaClasses",
            excludes: excludes)
    def kotlinDebugTree = fileTree(
            dir: "../domain/build/tmp/kotlin-classes/debug/de/logerbyte/jacocotest",
            excludes: excludes)
    def mainSrc = "../domain/src/main/java"
/*
    for other modules
    def debugTreeMyLib = fileTree(
            dir: "../mylibrary/build/intermediates/javac/debug/classes" +
                    "/de/logerbyte/mylibrary/javaClasses",
            excludes: excludes)
    def kotlinDebugTreeMyLib = fileTree(
            dir: "../mylibrary/build/tmp/kotlin-classes/debug/de/logerbyte/mylibrary",
            excludes: excludes)
    def mainSrcMyLib = "../mylibrary/src/main/java"

    */

    classDirectories.setFrom(files(
            [debugTree], [kotlinDebugTree]
            //, [debugTreeMyLib], [kotlinDebugTreeMyLib]
    ))
    sourceDirectories.setFrom(files(
            [mainSrc]
            //, [mainSrcMyLib]
    ))
    executionData.setFrom(files(
            //"../mylibrary/build/jacoco/testDebugUnitTest.exec",
            //"app/build/jacoco/testDebugUnitTest.exec",
            "../domain/build/jacoco/testDebugUnitTest.exec",
            '../domain/build/outputs/code_coverage/debugAndroidTest/connected/**coverage.ec'
    ))
}

dependencies {

    implementation project(path: ':domain')
    implementation project(path: ':infraestructure')

    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    def roomVersion = '2.4.2'
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    //kapt "androidx.room:room-compiler:$roomVersion"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'
    implementation 'androidx.activity:activity-compose:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}